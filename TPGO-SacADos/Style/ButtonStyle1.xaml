<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
		<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.066"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="6.25"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF1C9EE8"/>
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF1C9EE8"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="Storyboard2">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
								<EasingDoubleKeyFrame KeyTime="0" Value="1.058"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.003"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
								<EasingDoubleKeyFrame KeyTime="0" Value="5.5"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
								<EasingColorKeyFrame KeyTime="0" Value="#FF1C9EE8"/>
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="Black"/>
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
								<EasingColorKeyFrame KeyTime="0" Value="#FF1C9EE8"/>
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="Black"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					
					<!-- We use Grid as a root because it is easy to add more elements to customize the button -->
					<Grid x:Name="Grid">
						
						<!-- Content Presenter is where the text content etc is placed by the control -->
						<!-- The bindings are useful so that the control can be parameterized without editing the template -->
						<Rectangle x:Name="rectangle" Fill="#FF191921" HorizontalAlignment="Left" Height="41" Stroke="Black" VerticalAlignment="Top" Width="190" Opacity="0.8" RenderTransformOrigin="0.5,0.5">
							<Rectangle.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Rectangle.RenderTransform>
						</Rectangle>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="75.688,12.54,78.688,12.5" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" OpacityMask="White"/>
					</Grid>
					
					<!--Each state sets a brush on the Border in the template -->
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>